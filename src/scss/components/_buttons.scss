@use "mixins" as mixins;

.btn {
	--_width: initial;
	--_height: initial;
	--_fs: var(--fs-base);
	--_fw: 500;
	--_lh: normal;
	--_ls: normal;
	--_color: var(--text-color);
	--_bg: transparent;
	--_border-width: 0;
	--_border-style: solid;
	--_border-color: transparent;
	--_rounded: 0;
	--_padding: 0;
	--_transform: initial;
	--_transition-duration: var(--transition-duration);
	--_transition-timing-function: var(--transition-timing-function);

	--_color-hover: var(--primary);
	--_bg-hover: transparent;
	--_border-color-hover: transparent;
	--_transform-hover: initial;

	--_color-active: var(--primary);
	--_bg-active: transparent;
	--_border-color-active: transparent;
	--_transform-active: initial;

	--_icon-size: 1rem;
	--_icon-color: currentColor;

	width: var(--_width);
	height: var(--_height);

	display: inline-flex;
	align-items: center;
	justify-content: center;
	gap: .5rem;

  font-family: var(--font-second);
	font-size: var(--_fs);
	font-weight: var(--_fw);
	line-height: var(--_lh);
	letter-spacing: var(--_ls);
	color: var(--_color);
  text-align: center;
	cursor: pointer;
	background-color: var(--_bg);
	border: var(--_border-width) var(--_border-style) var(--_border-color);
	border-radius: var(--_rounded);
	padding: var(--_padding);
	outline: none;
	transform: var(--_transform);
	transition-property: color, text-shadow, background, border, transform, opacity;
	transition-duration: var(--_transition-duration);
	transition-timing-function: var(--_transition-timing-function);

	@media (hover: hover) {
		&:is(:hover, :focus-visible) {
			color: var(--_color-hover);
			background-color: var(--_bg-hover);
			border-color: var(--_border-color-hover);
			transform: var(--_transform-hover);
		}
	}

	&:is(:active, .is-active) {
		color: var(--_color-active);
		background-color: var(--_bg-active);
		border-color: var(--_border-color-active);
		transform: var(--_transform-active);
	}

	.icon {
		--_size: var(--_icon-size);
		--_color: var(--_icon-color);
	}
}

.btn-check {
	position: absolute;
	clip: rect(0, 0, 0, 0);
	pointer-events: none;

	&:checked {
		+ .btn {
			--_color: var(--primary);
			--_color-hover: var(--primary);
			--_color-active: var(--primary);
		}
	}
}

.btn-inline {
	--_color: inherit;
}

.btn-inherit {
	--_fs: inherit;
	--_fw: inherit;
	--_lh: inherit;
	--_ls: inherit;
	--_color: inherit;

	display: inline;
	text-transform: initial;
}

.btn-base {
	--_height: 2.5rem;
	--_fs: 1.125rem;
	--_padding: .25rem 1.75rem;
}

.btn-lg {
	--_height: 3rem;
	--_fs: 1.125rem;
	--_padding: .25rem 1.25rem;
}

.btn-lg2 {
	--_height: 3.75rem;
	--_fs: 1.125rem;
	--_padding: .25rem 1.25rem;
}

.btn-xl {
  --_height: 5rem;
	--_fs: 1.375rem;
  --_fw: 400;
	--_padding: .25rem 1.25rem;
}



.btn-menu {
  --_color: var(--light);

  --_icon-size: 2.5rem;
}

.btn-close {
  --_padding: .625rem;

  --_icon-size: 1.25rem;
}

.btn-download {
  --_fs: .9375rem;
  --_icon-size: 1.75rem;

  justify-content: flex-start;
  gap: .75rem;
  text-align: start;
}

.btn-outline-primary {
  --_border-width: 2px;
  --_border-color: var(--primary);

  --_color-hover: var(--light);
  --_bg-hover: var(--primary);
  --_border-color-hover: var(--primary);

  --_color-active: var(--light);
  --_bg-active: var(--primary);
  --_border-color-active: var(--primary);
}

.btn-outline-light {
  --_color: var(--light);
  --_border-width: 2px;
  --_border-color: var(--light);

  --_color-hover: var(--text-color);
  --_bg-hover: var(--light);
  --_border-color-hover: var(--light);

  --_color-active: var(--text-color);
  --_bg-active: var(--light);
  --_border-color-active: var(--light);
}

.btn-outline-dark {
  --_color: var(--text-color);
  --_border-width: 2px;
  --_border-color: var(--text-color);

  --_color-hover: var(--light);
  --_bg-hover: var(--text-color);
  --_border-color-hover: var(--text-color);

  --_color-active: var(--light);
  --_bg-active: var(--text-color);
  --_border-color-active: var(--text-color);
}
